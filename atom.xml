<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>caspar小站</title>
  
  
  <link href="https://sychimu.github.io/atom.xml" rel="self"/>
  
  <link href="https://sychimu.github.io/"/>
  <updated>2025-09-04T08:52:34.157Z</updated>
  <id>https://sychimu.github.io/</id>
  
  <author>
    <name>Caspar_sun</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>800系列芯片组主板win10下显示2个GPU</title>
    <link href="https://sychimu.github.io/2025/09/04/800%E7%B3%BB%E5%88%97%E8%8A%AF%E7%89%87%E7%BB%84%E4%B8%BB%E6%9D%BFwin10%E4%B8%8B%E6%98%BE%E7%A4%BA2%E4%B8%AAGPU/"/>
    <id>https://sychimu.github.io/2025/09/04/800%E7%B3%BB%E5%88%97%E8%8A%AF%E7%89%87%E7%BB%84%E4%B8%BB%E6%9D%BFwin10%E4%B8%8B%E6%98%BE%E7%A4%BA2%E4%B8%AAGPU/</id>
    <published>2025-09-04T08:06:21.000Z</published>
    <updated>2025-09-04T08:52:34.157Z</updated>
    
    <content type="html"><![CDATA[<p>支持的 Intel Ultra 处理器的 800 系列芯片组的主板Q870&#x2F;B860&#x2F;Z890 等。</p><p>Ultra 系列处理器除了后缀为 F&#x2F;KF 之外，大多数都是有 CPU 集成核显。</p><p>我们使用华硕 ROG STRIX B860-F Gaming 配合 Ultra 5 235 处理器，没有安装独显：</p><img src="/2025/09/04/800%E7%B3%BB%E5%88%97%E8%8A%AF%E7%89%87%E7%BB%84%E4%B8%BB%E6%9D%BFwin10%E4%B8%8B%E6%98%BE%E7%A4%BA2%E4%B8%AAGPU/image-20250904163919867.png" alt="image-20250904163919867" style="zoom:67%;"><p>虽然官网上推荐 800 系列芯片组的主板安装 <strong>Windows11</strong> 的操作系统，但是部分驱动也提供了 Windows10 的支持。</p><p>首先我们在这个平台上安装 <strong>Windows10 22H2</strong> 版本的系统：</p><img src="/2025/09/04/800%E7%B3%BB%E5%88%97%E8%8A%AF%E7%89%87%E7%BB%84%E4%B8%BB%E6%9D%BFwin10%E4%B8%8B%E6%98%BE%E7%A4%BA2%E4%B8%AAGPU/image-20250904163959034.png" alt="image-20250904163959034" style="zoom: 67%;"><p>除了 MediaTek MT7925 的无线网卡因为驱动不支持 Windows10 以外，我们用官网的驱动安装好其他部分全部驱动。</p><p>然后我们进入设备管理器里，确认显示适配器只有1个Intel（R) Graphics ：</p><p><img src="/2025/09/04/800%E7%B3%BB%E5%88%97%E8%8A%AF%E7%89%87%E7%BB%84%E4%B8%BB%E6%9D%BFwin10%E4%B8%8B%E6%98%BE%E7%A4%BA2%E4%B8%AAGPU/image-20250904164039733.png" alt="image-20250904164039733"></p><p>而任务管理器里，发现在只用核显的情况下，GPU 居然有两个，GPU0 和 GPU1：</p><img src="/2025/09/04/800%E7%B3%BB%E5%88%97%E8%8A%AF%E7%89%87%E7%BB%84%E4%B8%BB%E6%9D%BFwin10%E4%B8%8B%E6%98%BE%E7%A4%BA2%E4%B8%AAGPU/image-20250904164201648.png" alt="image-20250904164201648" style="zoom:67%;"><p>GPU0 对应的是核显，从信息里的驱动程序版本这里可以看出来。</p><p>GPU1 下的信息非常少，无法确认是什么硬件设备。</p><img src="/2025/09/04/800%E7%B3%BB%E5%88%97%E8%8A%AF%E7%89%87%E7%BB%84%E4%B8%BB%E6%9D%BFwin10%E4%B8%8B%E6%98%BE%E7%A4%BA2%E4%B8%AAGPU/image-20250904164219098.png" alt="image-20250904164219098" style="zoom:67%;"><p>那 GPU1 是什么？其实 GPU1 就是 AI BOOST 即 AI 加速。Windows10 对于 Ultra 系列处理器的 AI 加速支持不完善，所以 AI 加速这里显示为 Intel 保留设备的字样。而在任务管理器里，就多了一个 GPU1。</p><img src="/2025/09/04/800%E7%B3%BB%E5%88%97%E8%8A%AF%E7%89%87%E7%BB%84%E4%B8%BB%E6%9D%BFwin10%E4%B8%8B%E6%98%BE%E7%A4%BA2%E4%B8%AAGPU/image-20250904164245877.png" alt="image-20250904164245877" style="zoom:67%;"><p>当我们安装了推荐的 Windows11 的系统后，设备管理器里正确识别到 Intel AI 加速器的名称 Intel AI Boost：</p><img src="/2025/09/04/800%E7%B3%BB%E5%88%97%E8%8A%AF%E7%89%87%E7%BB%84%E4%B8%BB%E6%9D%BFwin10%E4%B8%8B%E6%98%BE%E7%A4%BA2%E4%B8%AAGPU/image-20250904164257548.png" alt="image-20250904164257548" style="zoom:67%;"><p>任务管理器里原来的 GPU1 也变成了 NPU：</p><img src="/2025/09/04/800%E7%B3%BB%E5%88%97%E8%8A%AF%E7%89%87%E7%BB%84%E4%B8%BB%E6%9D%BFwin10%E4%B8%8B%E6%98%BE%E7%A4%BA2%E4%B8%AAGPU/image-20250904164602833.png" alt="image-20250904164602833" style="zoom: 80%;">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;支持的 Intel Ultra 处理器的 800 系列芯片组的主板Q870&amp;#x2F;B860&amp;#x2F;Z890 等。&lt;/p&gt;
&lt;p&gt;Ultra 系列处理器除了后缀为 F&amp;#x2F;KF 之外，大多数都是有 CPU 集成核显。&lt;/p&gt;
&lt;p&gt;我们使用华硕 ROG STRI</summary>
      
    
    
    
    
    <category term="800系列" scheme="https://sychimu.github.io/tags/800%E7%B3%BB%E5%88%97/"/>
    
    <category term="GPU" scheme="https://sychimu.github.io/tags/GPU/"/>
    
  </entry>
  
  <entry>
    <title>PE2000U安装Ubuntu24.10并开启FDE全盘加密</title>
    <link href="https://sychimu.github.io/2025/08/29/PE2000U%E5%AE%89%E8%A3%85Ubuntu24-10%E5%B9%B6%E5%BC%80%E5%90%AFFDE%E5%85%A8%E7%9B%98%E5%8A%A0%E5%AF%86/"/>
    <id>https://sychimu.github.io/2025/08/29/PE2000U%E5%AE%89%E8%A3%85Ubuntu24-10%E5%B9%B6%E5%BC%80%E5%90%AFFDE%E5%85%A8%E7%9B%98%E5%8A%A0%E5%AF%86/</id>
    <published>2025-08-29T01:20:03.000Z</published>
    <updated>2025-08-29T01:52:39.683Z</updated>
    
    <content type="html"><![CDATA[<h3 id="系统准备："><a href="#系统准备：" class="headerlink" title="系统准备："></a>系统准备：</h3><ul><li><p>官方Ubuntu24.10</p></li><li><p>使用<a href="https://rufus.ie/zh/">rufus</a>制作U盘启动盘  (不要使用Ventroy，因为要启用Secure Boot，会导致Ventroy无法引导)</p></li></ul><h3 id="硬件准备："><a href="#硬件准备：" class="headerlink" title="硬件准备："></a>硬件准备：</h3><p>1、PE2000U更新官网最新支持WIN11版本<a href="https://www.asus.com/networking-iot-servers/aiot-industrial-solutions/embedded-computers-edge-ai-systems/pe2000u/helpdesk_bios?model2Name=PE2000U">BIOS</a></p><p><img src="/2025/08/29/PE2000U%E5%AE%89%E8%A3%85Ubuntu24-10%E5%B9%B6%E5%BC%80%E5%90%AFFDE%E5%85%A8%E7%9B%98%E5%8A%A0%E5%AF%86/image-20250829092350624.png" alt="image-20250829092350624"></p><p>2、BIOS设定 Advanced &gt;&gt;&gt; PCH-FW Configuration &gt;&gt;&gt; 开启Firmware TPM 或 PTT (默认dTPM)，重启生效</p><p><img src="/2025/08/29/PE2000U%E5%AE%89%E8%A3%85Ubuntu24-10%E5%B9%B6%E5%BC%80%E5%90%AFFDE%E5%85%A8%E7%9B%98%E5%8A%A0%E5%AF%86/image-20250829092522290.png" alt="image-20250829092522290"></p><p>3、重启进BIOS设定 Advanced &gt;&gt;&gt; Trusted Computing &gt;&gt;&gt; Pending operation &gt;&gt; TPM Clear</p><p>​ (用于新安装系统，避免被占用使得安装时无法调用)</p><p><img src="/2025/08/29/PE2000U%E5%AE%89%E8%A3%85Ubuntu24-10%E5%B9%B6%E5%BC%80%E5%90%AFFDE%E5%85%A8%E7%9B%98%E5%8A%A0%E5%AF%86/image-20250829092819792.png" alt="image-20250829092819792"></p><p>4、BIOS设定，Security &gt;&gt;&gt; Secure Boot &gt;&gt;&gt; Enable</p><p><img src="/2025/08/29/PE2000U%E5%AE%89%E8%A3%85Ubuntu24-10%E5%B9%B6%E5%BC%80%E5%90%AFFDE%E5%85%A8%E7%9B%98%E5%8A%A0%E5%AF%86/image-20250829092944236.png" alt="image-20250829092944236"></p><h3 id="系统安装："><a href="#系统安装：" class="headerlink" title="系统安装："></a>系统安装：</h3><p>1、使用官方ISO 制作U盘启动盘，正常引导安装Ubuntu24.10，在选择磁盘界面，点高级功能，选择启用硬件支持的全盘加密（FDE)，进行安装</p><p><img src="/2025/08/29/PE2000U%E5%AE%89%E8%A3%85Ubuntu24-10%E5%B9%B6%E5%BC%80%E5%90%AFFDE%E5%85%A8%E7%9B%98%E5%8A%A0%E5%AF%86/image-20250829093444768.png" alt="image-20250829093444768"></p><p>6、安装后，按提示重启，自动完成解密进入系统<br>7、可通过sudo snap recovery –show-keys 获取密钥并手动记录，用于自动解密失效等异常情况</p><p><img src="/2025/08/29/PE2000U%E5%AE%89%E8%A3%85Ubuntu24-10%E5%B9%B6%E5%BC%80%E5%90%AFFDE%E5%85%A8%E7%9B%98%E5%8A%A0%E5%AF%86/image-20250829093547337.png" alt="image-20250829093547337"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;系统准备：&quot;&gt;&lt;a href=&quot;#系统准备：&quot; class=&quot;headerlink&quot; title=&quot;系统准备：&quot;&gt;&lt;/a&gt;系统准备：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;官方Ubuntu24.10&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用&lt;a href=&quot;https:/</summary>
      
    
    
    
    
    <category term="Ubuntu" scheme="https://sychimu.github.io/tags/Ubuntu/"/>
    
    <category term="FDE全盘加密" scheme="https://sychimu.github.io/tags/FDE%E5%85%A8%E7%9B%98%E5%8A%A0%E5%AF%86/"/>
    
    <category term="TPM" scheme="https://sychimu.github.io/tags/TPM/"/>
    
  </entry>
  
  <entry>
    <title>H110T-CM-A主板 看门狗使用</title>
    <link href="https://sychimu.github.io/2025/08/27/H110T-CM-A%E4%B8%BB%E6%9D%BF-%E7%9C%8B%E9%97%A8%E7%8B%97%E4%BD%BF%E7%94%A8/"/>
    <id>https://sychimu.github.io/2025/08/27/H110T-CM-A%E4%B8%BB%E6%9D%BF-%E7%9C%8B%E9%97%A8%E7%8B%97%E4%BD%BF%E7%94%A8/</id>
    <published>2025-08-27T03:35:53.000Z</published>
    <updated>2025-08-27T03:46:25.232Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、安装并加载驱动"><a href="#一、安装并加载驱动" class="headerlink" title="一、安装并加载驱动"></a>一、安装并加载驱动</h3><p><strong>1、拷贝驱动文件</strong>：</p><p>拷贝 <a href="nuvwdt.zip">nuvwdt.zip</a> 到 <em>&#x2F;home&#x2F;用户名</em> 下，解压得到 nuvwdt.ko 驱动文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zip nuvwdt.zip</span><br></pre></td></tr></table></figure><p><strong>2、永久安装模块（重启后生效）</strong>：<br>为了让驱动在系统重启后自动加载，需要将<code>nuvwdt.ko</code>文件复制到系统模块目录，并更新依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建模块目录（若不存在）</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">mkdir</span> -p /lib/modules/$(<span class="built_in">uname</span> -r)/extra/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制模块到系统目录</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">cp</span> nuvwdt.ko /lib/modules/$(<span class="built_in">uname</span> -r)/extra/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新模块依赖</span></span><br><span class="line"><span class="built_in">sudo</span> depmod -a</span><br></pre></td></tr></table></figure><h4 id="二、通过-systemd-服务加载驱动（可指定参数）"><a href="#二、通过-systemd-服务加载驱动（可指定参数）" class="headerlink" title="二、通过 systemd 服务加载驱动（可指定参数）"></a>二、通过 systemd 服务加载驱动（可指定参数）</h4><p><strong>1、创建服务文件</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vim /etc/systemd/system/nuvoton-wdt.service</span><br></pre></td></tr></table></figure><p>内容如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=Nuvoton NCT6793 Watchdog Driver</span><br><span class="line"><span class="attr">After</span>=sysinit.target</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">Type</span>=<span class="literal">on</span>eshot</span><br><span class="line"><span class="attr">ExecStart</span>=/sbin/modprobe nuvwdt timeout=<span class="number">60</span> wdt_sel=<span class="number">1</span>  <span class="comment"># 可指定参数</span></span><br><span class="line"><span class="attr">RemainAfterExit</span>=<span class="literal">yes</span></span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure><p><strong>模块参数</strong>：</p><ul><li><code>timeout</code>：看门狗超时时间（1-255 秒，默认 60 秒）</li><li><code>nowayout</code>：默认0：允许通过关闭设备停止看门狗 1：一旦启动是否无法停止 （配置为1，服务启动后自动倒计时，建议最终环境使用时配置，并搭配喂狗服务使用）</li><li><code>early_disable</code>：启动时是否禁用看门狗</li><li><code>debug</code>：调试信息开关</li><li><code>wdt_sel</code>：选择看门狗通道（1 对应 WDT1，3 对应 WDT3，默认 1）</li></ul><p><strong>2、启动并设置开机自启</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重新加载systemd配置</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl daemon-reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动服务（立即加载模块）</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl start nuvoton-wdt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置开机自启</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> nuvoton-wdt</span><br></pre></td></tr></table></figure><h3 id="三、验证安装结果"><a href="#三、验证安装结果" class="headerlink" title="三、验证安装结果"></a>三、验证安装结果</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看模块是否加载</span></span><br><span class="line">lsmod | grep nuvwdt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看驱动日志（确认识别到NCT6793芯片）</span></span><br><span class="line">dmesg | grep -i <span class="string">&quot;wdt&quot;</span></span><br><span class="line"><span class="comment"># 成功日志示例：</span></span><br><span class="line"><span class="comment"># &quot;WDT driver init...&quot;</span></span><br><span class="line"><span class="comment"># &quot;WDT driver for NCT6793 (port:0x2E Super I/O chip initialising&quot;</span></span><br><span class="line"><span class="comment"># &quot;initialized. timeout=60 sec (nowayout=0)&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#检查设备节点：驱动加载成功后会创建/dev/watchdog1</span></span><br><span class="line"><span class="built_in">ls</span> -l /dev/watchdog1</span><br><span class="line"><span class="comment"># 输出应为：crw------- 1 root root 250, 1 ... /dev/watchdog1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#测试看门狗功能：测试 “喂狗操作”，执行一次喂狗命令：（root下执行）</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; &quot;</span> &gt; /dev/watchdog1  <span class="comment"># 无报错则说明驱动工作正常，等待超时会自动重启</span></span><br></pre></td></tr></table></figure><h4 id="四、查看看门狗基本信息（可选）"><a href="#四、查看看门狗基本信息（可选）" class="headerlink" title="四、查看看门狗基本信息（可选）"></a>四、查看看门狗基本信息（可选）</h4><p>通过 <code>wdctl</code> 工具（需安装 <code>watchdog</code> 包）查看看门狗的超时时间、支持的功能等（帮助后续测试判断超时周期）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先安装 watchdog 工具包（包含 wdctl 和用户空间喂狗程序）</span></span><br><span class="line"><span class="built_in">sudo</span> yum install -y watchdog</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看看门狗信息</span></span><br><span class="line"><span class="built_in">sudo</span> wdctl /dev/watchdog1</span><br></pre></td></tr></table></figure><p><strong>预期结果</strong>：输出包含超时时间（如 <code>Timeout: 60 seconds</code>，表示默认超时 60 秒，即 60 秒不喂狗会触发重启）、驱动名称（确认是 <code>NUVOTON</code>）等，示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Device:        /dev/watchdog1</span><br><span class="line">Driver:        NUVOTON Watchdog</span><br><span class="line">Timeout:       60 seconds</span><br><span class="line">Pre-timeout:   0 seconds</span><br><span class="line">Timeleft:      59 seconds</span><br></pre></td></tr></table></figure><h3 id="五、配置自动喂狗服务"><a href="#五、配置自动喂狗服务" class="headerlink" title="五、配置自动喂狗服务"></a>五、配置自动喂狗服务</h3><p><strong>1、创建喂狗脚本</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vim /usr/local/bin/watchdog_keepalive.sh</span><br></pre></td></tr></table></figure><p>脚本内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 每隔30秒向看门狗设备写入数据（喂狗）</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot; &quot;</span> &gt; /dev/watchdog</span><br><span class="line">    <span class="built_in">sleep</span> 30  <span class="comment"># 间隔需小于驱动timeout参数（默认60秒）</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>赋予执行权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">chmod</span> +x /usr/local/bin/watchdog_keepalive.sh</span><br></pre></td></tr></table></figure><p><strong>2、创建 systemd 服务</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vim /etc/systemd/system/watchdog.service</span><br></pre></td></tr></table></figure><p>服务内容：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=Nuvoton NCT6793 Watchdog Keepalive</span><br><span class="line"><span class="attr">After</span>=multi-user.target</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">Type</span>=simple</span><br><span class="line"><span class="attr">ExecStart</span>=/usr/local/bin/watchdog_keepalive.sh</span><br><span class="line"><span class="attr">Restart</span>=always  <span class="comment"># 脚本异常退出时自动重启</span></span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure><p><strong>3、启动并设置开机自启</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重新加载systemd配置</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl daemon-reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl start watchdog</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置开机自启</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> watchdog</span><br></pre></td></tr></table></figure><p><strong>4、验证服务状态</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl status watchdog</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;一、安装并加载驱动&quot;&gt;&lt;a href=&quot;#一、安装并加载驱动&quot; class=&quot;headerlink&quot; title=&quot;一、安装并加载驱动&quot;&gt;&lt;/a&gt;一、安装并加载驱动&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;1、拷贝驱动文件&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;拷贝 &lt;a hr</summary>
      
    
    
    
    
    <category term="看门狗" scheme="https://sychimu.github.io/tags/%E7%9C%8B%E9%97%A8%E7%8B%97/"/>
    
  </entry>
  
  <entry>
    <title>常见接口规格及对应型号</title>
    <link href="https://sychimu.github.io/2025/08/19/%E5%B8%B8%E8%A7%81%E6%8E%A5%E5%8F%A3%E8%A7%84%E6%A0%BC%E5%8F%8A%E5%AF%B9%E5%BA%94%E5%9E%8B%E5%8F%B7/"/>
    <id>https://sychimu.github.io/2025/08/19/%E5%B8%B8%E8%A7%81%E6%8E%A5%E5%8F%A3%E8%A7%84%E6%A0%BC%E5%8F%8A%E5%AF%B9%E5%BA%94%E5%9E%8B%E5%8F%B7/</id>
    <published>2025-08-19T08:31:52.000Z</published>
    <updated>2025-08-19T09:00:59.255Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th>接口类型</th><th>搜索型号</th><th>图例</th></tr></thead><tbody><tr><td>BOX header 2x5p, K9,<em>1.0mm</em> pitch</td><td>SHD1.0mm</td><td><img src="/2025/08/19/%E5%B8%B8%E8%A7%81%E6%8E%A5%E5%8F%A3%E8%A7%84%E6%A0%BC%E5%8F%8A%E5%AF%B9%E5%BA%94%E5%9E%8B%E5%8F%B7/clip_image002.png" alt="img"></td></tr><tr><td>WtoB 2x20p, <em>1.25mm</em>  pitch</td><td>DF13-40DS</td><td><img src="/2025/08/19/%E5%B8%B8%E8%A7%81%E6%8E%A5%E5%8F%A3%E8%A7%84%E6%A0%BC%E5%8F%8A%E5%AF%B9%E5%BA%94%E5%9E%8B%E5%8F%B7/clip_image004.png" alt="img"></td></tr><tr><td>Header 1x5p, K6, <em>1.0mm</em> pitch</td><td>SH1.0mm</td><td><img src="/2025/08/19/%E5%B8%B8%E8%A7%81%E6%8E%A5%E5%8F%A3%E8%A7%84%E6%A0%BC%E5%8F%8A%E5%AF%B9%E5%BA%94%E5%9E%8B%E5%8F%B7/clip_image006.png" alt="img"></td></tr><tr><td>WtoB 1x4p, <em>1.25mm</em>  pitch</td><td>MX1.25mm</td><td><img src="/2025/08/19/%E5%B8%B8%E8%A7%81%E6%8E%A5%E5%8F%A3%E8%A7%84%E6%A0%BC%E5%8F%8A%E5%AF%B9%E5%BA%94%E5%9E%8B%E5%8F%B7/clip_image008.png" alt="img"></td></tr><tr><td>BOX HD 2X5P G&#x2F;F <em>2.0</em> K8  BLK&#x2F;C S&#x2F;T</td><td>杜邦胶壳2.0mm</td><td><img src="/2025/08/19/%E5%B8%B8%E8%A7%81%E6%8E%A5%E5%8F%A3%E8%A7%84%E6%A0%BC%E5%8F%8A%E5%AF%B9%E5%BA%94%E5%9E%8B%E5%8F%B7/clip_image010.png" alt="img"></td></tr><tr><td>WAFER HD 4P G&#x2F;F <em>2.0</em>  BLK&#x2F;C S&#x2F;T</td><td>PH2.0mm</td><td><img src="/2025/08/19/%E5%B8%B8%E8%A7%81%E6%8E%A5%E5%8F%A3%E8%A7%84%E6%A0%BC%E5%8F%8A%E5%AF%B9%E5%BA%94%E5%9E%8B%E5%8F%B7/clip_image012.png" alt="img"></td></tr><tr><td>WAFER HD 1X4P <em>3.96MM</em> NAT S&#x2F;T DIP</td><td>VH3.96mm</td><td><img src="/2025/08/19/%E5%B8%B8%E8%A7%81%E6%8E%A5%E5%8F%A3%E8%A7%84%E6%A0%BC%E5%8F%8A%E5%AF%B9%E5%BA%94%E5%9E%8B%E5%8F%B7/clip_image014.png" alt="img"></td></tr><tr><td>WAFER HD 4P <em>2.5MM</em> NAT S&#x2F;T DIP</td><td>XH2.5mm</td><td><img src="/2025/08/19/%E5%B8%B8%E8%A7%81%E6%8E%A5%E5%8F%A3%E8%A7%84%E6%A0%BC%E5%8F%8A%E5%AF%B9%E5%BA%94%E5%9E%8B%E5%8F%B7/clip_image016.png" alt="img"></td></tr><tr><td>HEADER  2x5p, K10, <em>2.54mm</em> pitch</td><td>杜邦胶壳2.54mm</td><td><img src="/2025/08/19/%E5%B8%B8%E8%A7%81%E6%8E%A5%E5%8F%A3%E8%A7%84%E6%A0%BC%E5%8F%8A%E5%AF%B9%E5%BA%94%E5%9E%8B%E5%8F%B7/clip_image002-1755593564485-1.png" alt="img"></td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;接口类型&lt;/th&gt;
&lt;th&gt;搜索型号&lt;/th&gt;
&lt;th&gt;图例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;BOX header 2x5p, K9,&lt;em&gt;1.0mm&lt;/em&gt; pitch&lt;/td&gt;
&lt;t</summary>
      
    
    
    
    
    <category term="接口规格" scheme="https://sychimu.github.io/tags/%E6%8E%A5%E5%8F%A3%E8%A7%84%E6%A0%BC/"/>
    
  </entry>
  
  <entry>
    <title>SATA热插拔功能验证</title>
    <link href="https://sychimu.github.io/2025/08/14/SATA%E7%83%AD%E6%8F%92%E6%8B%94%E5%8A%9F%E8%83%BD%E9%AA%8C%E8%AF%81/"/>
    <id>https://sychimu.github.io/2025/08/14/SATA%E7%83%AD%E6%8F%92%E6%8B%94%E5%8A%9F%E8%83%BD%E9%AA%8C%E8%AF%81/</id>
    <published>2025-08-14T06:51:25.000Z</published>
    <updated>2025-08-14T07:06:09.474Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、设定SATA-热插拔功能"><a href="#1、设定SATA-热插拔功能" class="headerlink" title="1、设定SATA 热插拔功能"></a>1、设定SATA 热插拔功能</h3><p>SATA接口硬盘热插拔，需要在BIOS中开启这个设置。以华硕消费主板为例，操作步骤如下：</p><ol><li>开机后按 F2 或者 DEL 键，进入 BIOS；</li><li>切换至高级模式（Advanced Mode）；</li><li>依次进入如下路径：Advanced\PCH Storage Configuration，将对应 SATA 接口的 Hot Plug 选项切换至“Enabled”;</li><li>F10 保存当前 BIOS 设置并退出，即可。</li></ol><p><img src="/2025/08/14/SATA%E7%83%AD%E6%8F%92%E6%8B%94%E5%8A%9F%E8%83%BD%E9%AA%8C%E8%AF%81/9f510fb30f2442a7187fdd31c343ad4bd1130234.png" alt="img"></p><h3 id="2、验证SATA热插拔功能-开启（已开启SATA6G-1-Hot-Plug-功能）"><a href="#2、验证SATA热插拔功能-开启（已开启SATA6G-1-Hot-Plug-功能）" class="headerlink" title="2、验证SATA热插拔功能 开启（已开启SATA6G_1 Hot Plug 功能）"></a>2、验证SATA热插拔功能 <em>开启</em>（已开启SATA6G_1 Hot Plug 功能）</h3><ol><li>主板SATA_1接口<em>不接任何设备</em></li><li>通过其他启动设备（M.2 或 其他 SATA口硬盘），启动到windows系统中</li><li>在系统下，先将需要热插拔的硬盘接通<strong>电源线</strong>，再连接<strong>数据线</strong>，插到 SATA_1接口</li><li>此时，电脑会识别到新的存储设备，并识别对应硬盘分区信息，确认热插拔功能开启</li></ol><h3 id="3、验证SATA热插拔功能-关闭（已关闭SATA6G-1-Hot-Plug-功能）"><a href="#3、验证SATA热插拔功能-关闭（已关闭SATA6G-1-Hot-Plug-功能）" class="headerlink" title="3、验证SATA热插拔功能 关闭（已关闭SATA6G_1 Hot Plug 功能）"></a>3、验证SATA热插拔功能 <em>关闭</em>（已关闭SATA6G_1 Hot Plug 功能）</h3><ol><li>主板SATA_1接口<em>不接任何设备</em></li><li>通过其他启动设备（M.2 或 其他 SATA口硬盘），启动到windows系统中</li><li>在系统下，先将需要热插拔的硬盘接通<strong>电源线</strong>，再连接<strong>数据线</strong>，插到 SATA_1接口</li><li>此时，电脑 <em><strong>不会</strong></em> 识别到新的存储设备，确认热插拔功能关闭</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1、设定SATA-热插拔功能&quot;&gt;&lt;a href=&quot;#1、设定SATA-热插拔功能&quot; class=&quot;headerlink&quot; title=&quot;1、设定SATA 热插拔功能&quot;&gt;&lt;/a&gt;1、设定SATA 热插拔功能&lt;/h3&gt;&lt;p&gt;SATA接口硬盘热插拔，需要在BIOS中开启</summary>
      
    
    
    
    
    <category term="SATA热插拔" scheme="https://sychimu.github.io/tags/SATA%E7%83%AD%E6%8F%92%E6%8B%94/"/>
    
    <category term="Hot plug" scheme="https://sychimu.github.io/tags/Hot-plug/"/>
    
  </entry>
  
  <entry>
    <title>取消Ubuntu/银河麒麟关机等待60s</title>
    <link href="https://sychimu.github.io/2025/08/14/%E5%8F%96%E6%B6%88Ubuntu-%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9F%E5%85%B3%E6%9C%BA%E7%AD%89%E5%BE%8560s/"/>
    <id>https://sychimu.github.io/2025/08/14/%E5%8F%96%E6%B6%88Ubuntu-%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9F%E5%85%B3%E6%9C%BA%E7%AD%89%E5%BE%8560s/</id>
    <published>2025-08-14T04:30:37.000Z</published>
    <updated>2025-08-14T05:39:15.768Z</updated>
    
    <content type="html"><![CDATA[<p>默认按开关键，会弹出关机提示窗口，如果需要直接关机不等待60s，参考如下内容。</p><h3 id="1、Ubuntu"><a href="#1、Ubuntu" class="headerlink" title="1、Ubuntu"></a>1、Ubuntu</h3><img src="/2025/08/14/%E5%8F%96%E6%B6%88Ubuntu-%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9F%E5%85%B3%E6%9C%BA%E7%AD%89%E5%BE%8560s/image-20250814123641130.png" alt="image-20250814123641130" style="zoom: 50%;"><p>参考命令如下：（<em>若机台无外接显示设备，需要加装假负载，否则命令无法生效</em>）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gsettings <span class="built_in">set</span> org.gnome.SessionManager logout-prompt <span class="literal">false</span></span><br></pre></td></tr></table></figure><h3 id="2、银河麒麟服务器版"><a href="#2、银河麒麟服务器版" class="headerlink" title="2、银河麒麟服务器版"></a>2、银河麒麟服务器版</h3><img src="/2025/08/14/%E5%8F%96%E6%B6%88Ubuntu-%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9F%E5%85%B3%E6%9C%BA%E7%AD%89%E5%BE%8560s/v2-842205febeb7537f3de66fbe3852bf29_1440w.jpg" alt="img" style="zoom:150%;"><p>参考如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">//root账户：</span><br><span class="line"><span class="comment"># gsettings set org.mate.power-manager button-power shutdown</span></span><br><span class="line"><span class="comment"># gsettings set org.mate.session logout-prompt false</span></span><br><span class="line">//直接按1次电源键关机</span><br><span class="line"></span><br><span class="line">//非root账户：</span><br><span class="line">$ gsettings <span class="built_in">set</span> org.mate.power-manager button-power shutdown</span><br><span class="line">$ gsettings <span class="built_in">set</span> org.mate.session logout-prompt <span class="literal">false</span></span><br><span class="line">//账户权限问题，需要按2次电源键，直接关机</span><br></pre></td></tr></table></figure><h3 id="3、银河麒麟桌面版"><a href="#3、银河麒麟桌面版" class="headerlink" title="3、银河麒麟桌面版"></a>3、银河麒麟桌面版</h3><img src="/2025/08/14/%E5%8F%96%E6%B6%88Ubuntu-%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9F%E5%85%B3%E6%9C%BA%E7%AD%89%E5%BE%8560s/image-20250814132117872.png" alt="image-20250814132117872" style="zoom: 33%;"><p>参考如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gsettings <span class="built_in">set</span> org.ukui.power-manager button-power shutdown</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;默认按开关键，会弹出关机提示窗口，如果需要直接关机不等待60s，参考如下内容。&lt;/p&gt;
&lt;h3 id=&quot;1、Ubuntu&quot;&gt;&lt;a href=&quot;#1、Ubuntu&quot; class=&quot;headerlink&quot; title=&quot;1、Ubuntu&quot;&gt;&lt;/a&gt;1、Ubuntu&lt;/h3&gt;&lt;i</summary>
      
    
    
    
    
    <category term="Ubuntu" scheme="https://sychimu.github.io/tags/Ubuntu/"/>
    
    <category term="银河麒麟" scheme="https://sychimu.github.io/tags/%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9F/"/>
    
    <category term="关机60s等待" scheme="https://sychimu.github.io/tags/%E5%85%B3%E6%9C%BA60s%E7%AD%89%E5%BE%85/"/>
    
  </entry>
  
  <entry>
    <title>上电自启设定</title>
    <link href="https://sychimu.github.io/2025/08/08/%E4%B8%8A%E7%94%B5%E8%87%AA%E5%90%AF%E8%AE%BE%E5%AE%9A/"/>
    <id>https://sychimu.github.io/2025/08/08/%E4%B8%8A%E7%94%B5%E8%87%AA%E5%90%AF%E8%AE%BE%E5%AE%9A/</id>
    <published>2025-08-08T07:06:47.000Z</published>
    <updated>2025-09-03T07:30:38.620Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-BIOS设定上电自启"><a href="#1-BIOS设定上电自启" class="headerlink" title="1. BIOS设定上电自启"></a>1. BIOS设定上电自启</h4><ul><li>开机按F2&#x2F;DEL进入BIOS，右方向键 进入 <em>Advanced</em> 选项卡</li></ul><p><img src="/2025/08/08/%E4%B8%8A%E7%94%B5%E8%87%AA%E5%90%AF%E8%AE%BE%E5%AE%9A/1.jpg"></p><ul><li>向下选择 <em>APM Configuration</em> 回车进入</li></ul><p><img src="/2025/08/08/%E4%B8%8A%E7%94%B5%E8%87%AA%E5%90%AF%E8%AE%BE%E5%AE%9A/2.jpg"></p><ul><li>选择 <em>Restore AC Power Loss</em>，默认 <strong>[S5 State]</strong>，回车选择 <strong>[S0 State]</strong></li></ul><p>xxxxxxxxxx $ gsettings set org.ukui.power-manager button-power shutdownbash</p><ul><li>设定S0后，按 <em>F4</em> 保存并重启，再次启动后关机</li></ul><p><img src="/2025/08/08/%E4%B8%8A%E7%94%B5%E8%87%AA%E5%90%AF%E8%AE%BE%E5%AE%9A/4.jpg"></p><ul><li>验证上电自启：关机后，<em><strong>完全断电30秒 ~ 1分钟后，再次进行上电动作</strong></em>，机台自行上电启动，确认上电自启设定成功。</li></ul><h4 id="2-主板跳线设定上电自启"><a href="#2-主板跳线设定上电自启" class="headerlink" title="2. 主板跳线设定上电自启"></a>2. 主板跳线设定上电自启</h4><p>   大部分主板有 <em>AT&#x2F;ATX 跳线</em>，可以通过AT&#x2F;ATX跳线改动，实现上电自启功能，具体位置参考主板手册</p>   <img src="/2025/08/08/%E4%B8%8A%E7%94%B5%E8%87%AA%E5%90%AF%E8%AE%BE%E5%AE%9A/image-20250808153239672.png" alt="image-20250808153239672" style="zoom: 67%;"><p>   <img src="/2025/08/08/%E4%B8%8A%E7%94%B5%E8%87%AA%E5%90%AF%E8%AE%BE%E5%AE%9A/image-20250808153520991.png" alt="image-20250808153520991"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;1-BIOS设定上电自启&quot;&gt;&lt;a href=&quot;#1-BIOS设定上电自启&quot; class=&quot;headerlink&quot; title=&quot;1. BIOS设定上电自启&quot;&gt;&lt;/a&gt;1. BIOS设定上电自启&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;开机按F2&amp;#x2F;DEL进入BIOS，右</summary>
      
    
    
    
    
    <category term="上电自启" scheme="https://sychimu.github.io/tags/%E4%B8%8A%E7%94%B5%E8%87%AA%E5%90%AF/"/>
    
  </entry>
  
  <entry>
    <title>PE1100N烧录系统</title>
    <link href="https://sychimu.github.io/2025/08/07/PE1100N%E7%83%A7%E5%BD%95%E7%B3%BB%E7%BB%9F/"/>
    <id>https://sychimu.github.io/2025/08/07/PE1100N%E7%83%A7%E5%BD%95%E7%B3%BB%E7%BB%9F/</id>
    <published>2025-08-07T08:26:46.000Z</published>
    <updated>2025-08-08T09:05:55.107Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>PE1100N仅支持通过 Ubuntu 烧录镜像，不支持通过 Windows 烧录镜像。</strong></p></blockquote><h2 id="1-1-恢复模式"><a href="#1-1-恢复模式" class="headerlink" title="1.1 恢复模式"></a>1.1 恢复模式</h2><ol><li><p><strong>系统要求</strong></p><p>• Linux 主机（x86 Ubuntu 18.04 及更高版本）</p><p>• Micro USB 数据线</p></li><li><p><strong>进入强制恢复模式</strong><br>PE1100N Flash端口是数字 ❷，强制恢复按钮是数字 ❹<img src="/2025/08/07/PE1100N%E7%83%A7%E5%BD%95%E7%B3%BB%E7%BB%9F/236100307-e4562179-e662-424f-9853-5b67d3f4834f.png" alt="234836537-a91d0518-55ef-4694-a575-fd1345164753"></p></li></ol><p>请执行以下步骤PE1100N进入强制恢复模式：</p><p><strong>[PE1100N]</strong></p><ol><li>关闭PE1100N电源并拔下电源线。</li><li>使用 Micro USB 数据线连接主机和PE1100N Flash端口（数字 ❷）。</li><li>用细针顶住强制恢复按钮（数字 ❹）。</li><li>连接电源线并打开PE1100N电源。</li><li>3 秒后松开强制恢复按钮。</li></ol><p><strong>[主机]</strong></p><p>在 Linux 主机 PC 上，打开终端窗口并输入命令 。如果返回的内容根据您使用的 Jetson SoM 具有以下输出之一，则该板处于强制恢复模式。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsusb</span><br></pre></td></tr></table></figure><p><img src="/2025/08/07/PE1100N%E7%83%A7%E5%BD%95%E7%B3%BB%E7%BB%9F/236101253-dd90c67d-2ceb-48a5-83b6-02b57e710244.png" alt="234836868-50478e57-027e-4784-a458-51d325f5b256"></p><p>• Orin NX 16GB：0955：7323 NVidia Corp<br>• Orin NX 8GB：0955：7423 NVidia Corp<br>• Orin Nano 8GB：0955：7523 NVidia Corp<br>• Orin Nano 4GB：0955：7623 NVidia Corp</p><h2 id="1-2-烧录镜像"><a href="#1-2-烧录镜像" class="headerlink" title="1.2 烧录镜像"></a>1.2 烧录镜像</h2><p><strong>[主机]</strong></p><ol><li><p>在主机上提取 BSP 文件</p><p>BSP 文件示例：</p></li></ol><table><thead><tr><th>系统</th><th>文件名</th></tr></thead><tbody><tr><td>PE1100N Orin Nano 4GB</td><td>PE1100N Orin Nano 4GB JetPack x.x.x Image Vx.x.x</td></tr><tr><td>PE1100N Orin Nano 8GB</td><td>PE1100N Orin Nano 8GB JetPack x.x.x Image Vx.x.x</td></tr><tr><td>PE1100N Orin NX 8GB</td><td>PE1100N Orin NX 8GB JetPack x.x.x Image Vx.x.x</td></tr><tr><td>PE1100N Orin NX 16GB</td><td>PE1100N Orin NX 16GB JetPack x.x.x Image Vx.x.x</td></tr></tbody></table><p>下载链接 ： <a href="https://www.asus.com/networking-iot-servers/aiot-industrial-solutions/embedded-computers-edge-ai-systems/pe1100n/helpdesk_download?model2Name=PE1100N">https://www.asus.com/networking-iot-servers/aiot-industrial-solutions/embedded-computers-edge-ai-systems/pe1100n/helpdesk_download?model2Name=PE1100N</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> tar -xvpf PE1100N_JXANS_Orin-NX-16GB_JetPack-ssd-5.1.1_L4T-35.3.1_v0.1.3-debug-20230503.tar.gz</span><br></pre></td></tr></table></figure><ol start="2"><li>更改文件夹，执行烧录命令</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> mfi_PE110xxxxxxxx  </span><br><span class="line"><span class="built_in">sudo</span> ./tools/kernel_flash/l4t_initrd_flash.sh --erase-all --flash-only --showlogs --network usb0</span><br></pre></td></tr></table></figure><ol start="3"><li>烧录镜像大约需要 15 分钟</li></ol><p><strong>[PE1100N]</strong><br>15 分钟后，PE1100N将自动重启。</p><blockquote><p>注意：</p><ol><li>请勿在主机和PE1100N之间使用 USB 集线器。</li><li>您可以从“mfi_PE1100N-orin&#x2F;initrdlog”中了解烧录镜像的过程。</li><li>提示ERROR XXXX not found! 需手动安装依赖。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update</span><br><span class="line"><span class="built_in">sudo</span> apt install sshpass</span><br><span class="line"><span class="built_in">sudo</span> apt install nfs-kernel-server</span><br></pre></td></tr></table></figure></li></ol></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;PE1100N仅支持通过 Ubuntu 烧录镜像，不支持通过 Windows 烧录镜像。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-1-恢复模式&quot;&gt;&lt;a href=&quot;#1-1-恢复模式&quot; class=</summary>
      
    
    
    
    
    <category term="PE1100N" scheme="https://sychimu.github.io/tags/PE1100N/"/>
    
    <category term="Jetson" scheme="https://sychimu.github.io/tags/Jetson/"/>
    
  </entry>
  
  <entry>
    <title>IoT产品刷新BIOS-SOP</title>
    <link href="https://sychimu.github.io/2025/08/07/IoT%E4%BA%A7%E5%93%81%E5%88%B7%E6%96%B0BIOS-SOP/"/>
    <id>https://sychimu.github.io/2025/08/07/IoT%E4%BA%A7%E5%93%81%E5%88%B7%E6%96%B0BIOS-SOP/</id>
    <published>2025-08-07T02:49:07.000Z</published>
    <updated>2025-09-03T07:30:56.916Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>将 BIOS.zip 解压缩，得到 .CAP 文件，将.CAP 文件拷贝到 U 盘（FAT32格式）中，并插到主板 USB 接口。</p></li><li><p>开机按 F2&#x2F;DEL 进入 BIOS，右方向键进入 <em>Advanced</em>，向下选择 <em>EZ-Flash</em>，回车。</p><p><img src="/2025/08/07/IoT%E4%BA%A7%E5%93%81%E5%88%B7%E6%96%B0BIOS-SOP/2.jpg"></p></li><li><p>选择 <em>Enter Ez-Flash mode</em>，再次回车，选择 Yes，机台重启。</p><p><img src="/2025/08/07/IoT%E4%BA%A7%E5%93%81%E5%88%B7%E6%96%B0BIOS-SOP/3.jpg"></p></li><li><p>重启后进入 EZ-FLASH 界面。</p><p><img src="/2025/08/07/IoT%E4%BA%A7%E5%93%81%E5%88%B7%E6%96%B0BIOS-SOP/4.jpg"></p></li><li><p>选择 U 盘，按回车进入 U 盘文件目录。</p><p><img src="/2025/08/07/IoT%E4%BA%A7%E5%93%81%E5%88%B7%E6%96%B0BIOS-SOP/5.jpg"></p></li><li><p>选择正确的 BIOS 档案.CAP，并按下回车，等待自动更新 BIOS 完成</p><p><img src="/2025/08/07/IoT%E4%BA%A7%E5%93%81%E5%88%B7%E6%96%B0BIOS-SOP/6.jpg"></p></li><li><p>刷新完成，等待 5 秒自动重启。</p></li><li><p>再次进入 BIOS，<strong>按 F3 调取新 BIOS 默认设定值，F4 保存重启，完成更新</strong>。</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;将 BIOS.zip 解压缩，得到 .CAP 文件，将.CAP 文件拷贝到 U 盘（FAT32格式）中，并插到主板 USB 接口。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;开机按 F2&amp;#x2F;DEL 进入 BIOS，右方向键进入 &lt;em&gt;Advanced&lt;/</summary>
      
    
    
    
    
    <category term="BIOS" scheme="https://sychimu.github.io/tags/BIOS/"/>
    
  </entry>
  
  <entry>
    <title>Q470EA + RTX3060Ti + 银河麒麟 V10 SP1 2503 &gt;&gt; 更新官网 570.172.08 驱动</title>
    <link href="https://sychimu.github.io/2025/08/06/Q470EA-RTX3060-%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9F2503-570%E9%A9%B1%E5%8A%A8/"/>
    <id>https://sychimu.github.io/2025/08/06/Q470EA-RTX3060-%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9F2503-570%E9%A9%B1%E5%8A%A8/</id>
    <published>2025-08-06T09:28:04.000Z</published>
    <updated>2025-09-03T07:31:17.379Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>系统下核显 + 独显同时显示:</p><p>BIOS &gt;&gt;&gt; Advanced &gt;&gt;&gt; Graphics Configuration &gt;&gt;&gt; Internal Graphics &gt; Enabled</p></li><li><p>安装银河麒麟 V10 SP1 2503</p><p>（2403 版本验证安装驱动过程会有权限写入问题，无法安装）</p></li><li><p>RTX3060Ti 可以直接识别正常，终端中<code>nvidia-smi</code>可以认到显卡驱动是 470.161.03</p><p>终端输出示例：</p><p><img src="/2025/08/06/Q470EA-RTX3060-%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9F2503-570%E9%A9%B1%E5%8A%A8/3.1.jpg"></p></li><li><p>拷贝驱动文件并赋予权限：</p></li></ol><p>拷贝<code>NVIDIA-Linux-x86_64-570.172.08.run</code>到<code>/home/当前用户名/</code>，终端执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod a+x NVIDIA-Linux-x86_64-570.172.08.run</span><br></pre></td></tr></table></figure><ol start="5"><li>尝试更新 570.172.08 驱动：</li></ol><p>A. 卸载系统自带 nvidia 470 驱动：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt purge nvidia-graphics-driver</span><br></pre></td></tr></table></figure><p>B. 禁用 Nouveau 驱动：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/modprobe.d/blacklist.conf</span><br></pre></td></tr></table></figure><p>在文件最后一行增加以下内容（VIM操作方法：先按Insert进入编辑状态，光标移动到最下方最后一个字符后回车，输入添加的内容后，按ESC退出编辑状态）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">blacklist nouveau</span><br><span class="line"></span><br><span class="line">options nouveau modeset=0</span><br></pre></td></tr></table></figure><p>保存退出（直接输入<code>:wq</code>），然后执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo update-initramfs -u</span><br><span class="line"></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><p><em>重启后如果无法进入图形界面，正常启动后左上角出现光标闪动，按</em><code>ctl+alt+F1</code><em>进入命令行界面，先输入用户名回车，再输入密码登录</em></p><p>C. 安装编译工具（联网状态）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install g++ gcc make</span><br></pre></td></tr></table></figure><p>D. 安装驱动：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ./NVIDIA-Linux-x86_64-570.172.08.run</span><br></pre></td></tr></table></figure><p><em>中间提示选择 NVIDIA Proprietary<br><img src="/2025/08/06/Q470EA-RTX3060-%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9F2503-570%E9%A9%B1%E5%8A%A8/5.1.jpg"><br>安装 32bit lib 库，YES<br><img src="/2025/08/06/Q470EA-RTX3060-%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9F2503-570%E9%A9%B1%E5%8A%A8/5.2.jpg"><br>不安装 dkms，NO<br><img src="/2025/08/06/Q470EA-RTX3060-%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9F2503-570%E9%A9%B1%E5%8A%A8/5.3.jpg"><br>不安装自动更新，NO</em><br><img src="/2025/08/06/Q470EA-RTX3060-%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9F2503-570%E9%A9%B1%E5%8A%A8/5.4.jpg"></p><p>E. 安装成功后，回到图形界面：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/lightdm restart</span><br></pre></td></tr></table></figure><ol start="6"><li>验证驱动安装是否成功：</li></ol><p>终端输入<code>nvidia-smi</code>查看驱动版本，输出示例：</p><p><img src="/2025/08/06/Q470EA-RTX3060-%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9F2503-570%E9%A9%B1%E5%8A%A8/6.1.jpg"></p><ol start="7"><li>如遇到安装驱动提示权限不足问题<br><img src="/2025/08/06/Q470EA-RTX3060-%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9F2503-570%E9%A9%B1%E5%8A%A8/7.1.jpg"><br>从图形界面，菜单中找到安全中心<br><img src="/2025/08/06/Q470EA-RTX3060-%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9F2503-570%E9%A9%B1%E5%8A%A8/7.2.jpg"><br>将 <em>应用保护</em> 内的选项都关闭<br><img src="/2025/08/06/Q470EA-RTX3060-%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9F2503-570%E9%A9%B1%E5%8A%A8/7.3.jpg"><br>将 <em>设备安全</em> 内的选项都关闭<br><img src="/2025/08/06/Q470EA-RTX3060-%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9F2503-570%E9%A9%B1%E5%8A%A8/7.4.jpg"></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;系统下核显 + 独显同时显示:&lt;/p&gt;
&lt;p&gt;BIOS &amp;gt;&amp;gt;&amp;gt; Advanced &amp;gt;&amp;gt;&amp;gt; Graphics Configuration &amp;gt;&amp;gt;&amp;gt; Internal Graphics &amp;gt; Enable</summary>
      
    
    
    
    
    <category term="Q470EA" scheme="https://sychimu.github.io/tags/Q470EA/"/>
    
    <category term="银河麒麟V10 SP1 2503" scheme="https://sychimu.github.io/tags/%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9FV10-SP1-2503/"/>
    
    <category term="NVIDIA" scheme="https://sychimu.github.io/tags/NVIDIA/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://sychimu.github.io/2025/08/06/hello-world/"/>
    <id>https://sychimu.github.io/2025/08/06/hello-world/</id>
    <published>2025-08-06T04:12:11.478Z</published>
    <updated>2025-09-03T07:30:48.718Z</updated>
    
    <content type="html"><![CDATA[<p>欢迎来到Caspar的小站，临时分享一些技术内容！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;欢迎来到Caspar的小站，临时分享一些技术内容！&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
</feed>
